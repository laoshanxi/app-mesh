name: "release-macos-package"

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - ".github/workflows/build-macos.yaml"
      - "src/**"
      - "script/**"

env:
  APPMESH_VERSION: "2.2.1"

jobs:
  build:
    strategy:
      matrix:
        os: [macos-14, macos-15]
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v5

      - name: Setup Homebrew and Install Dependencies
        run: |
          echo "Updating Homebrew..."
          brew update

          echo "Verifying installed packages..."
          brew list

      - name: Setup Build Environment
        run: |
          bash script/setup_build_env/autogen.sh.mac.sh

      - name: Build project
        if: always()
        run: |
          echo "Creating build directory..."
          mkdir -p build && cd build

          echo "Running CMake configuration..."
          cmake ..

          echo "Building the project..."
          make -j"$(sysctl -n hw.ncpu)"
          make pack

      - name: Upload packages
        uses: actions/upload-artifact@v5
        with:
          name: ${{ matrix.os }}-${{ github.sha }}
          path: build/appmesh_*.pkg

  test:
    needs: build
    strategy:
      matrix:
        os: [macos-14, macos-15]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-go@v6
        with:
          go-version: "stable"

      - name: Download packages
        uses: actions/download-artifact@v6
        with:
          name: ${{ matrix.os }}-${{ github.sha }}

      - name: Run tests
        run: |
          set -x
          echo "Testing the project..."
          # Install App Mesh
          os_ver="${{ matrix.os }}"
          os_ver="${os_ver#*-}"
          pkg_file=$(ls appmesh_*_macos_${os_ver}_*.pkg | head -n1)
          if [ -z "$pkg_file" ]; then
            echo "No matching pkg file found!" && ls -l && exit 1
          fi
          if ! sudo installer -pkg "$pkg_file" -target /; then
            echo "Installer failed! Printing debug info:"
            ls -l
            cat /var/log/install.log | tail -n 100
            exit 1
          fi

          # Start App Mesh
          appc -v || true
          sudo bash /opt/appmesh/script/appmesh.initd.sh start || true

          # Check
          sudo otool /opt/appmesh/bin/appsvc -L

          # hostname resolve need some time
          sleep 10

          # Test
          tail /opt/appmesh/work/server.log
          tail /opt/appmesh/work/stdout/appmesh.agent.out
          # sudo lldb -p $(cat /opt/appmesh/appmesh.pid) -o "thread backtrace all" -o "quit" || true
          appc ls
          appc resource

          # test appmesh python sdk
          python3 -m pip install --break-system-packages --upgrade appmesh pyotp
          python3 src/sdk/python/test/test_appmesh_client.py
          python3 src/sdk/python/sample.py

          cd src/sdk/go
          go test -v

  publish:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Download macos-14 packages
        uses: actions/download-artifact@v6
        with:
          name: macos-14-${{ github.sha }}

      - name: Download macos-15 packages
        uses: actions/download-artifact@v6
        with:
          name: macos-15-${{ github.sha }}

      - name: Publish release
        uses: softprops/action-gh-release@v2
        with:
          name: "Security"
          tag_name: ${{ env.APPMESH_VERSION }}
          fail_on_unmatched_files: false
          token: ${{ secrets.PUBLISH_RELEASE }}
          files: appmesh_*.pkg
