name: Build package and publish

on:
  push:
    branches: [main]
    paths:
      - "src/**"
      - "script/**"
      - ".github/workflows/publish-github-release.yml"
  workflow_run:
    workflows: ["build ubuntu20 image for build appmesh"]
    types:
      - completed

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  APPMESH_VERSION: "2.1.1"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout Github code
        uses: actions/checkout@v3

      # https://github.com/marketplace/actions/docker-run-action
      # docker run --rm -v $(pwd):/workspace -w /workspace laoshanxi/appmesh:build_centos7 sh -c "mkdir build7;cd build7;cmake ..;make -j6;make pack;make test ARGS='-V'"
      - name: build with ubuntu22
        uses: addnab/docker-run-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          image: laoshanxi/appmesh:build_ubuntu22
          options: --rm -v ${{ github.workspace }}:/workspace -w /workspace
          run: |
            mkdir ubuntu22
            cd ubuntu22
            cmake ..
            make -j6
            make pack
            ls
            make test ARGS='-V'

      - name: build with ubuntu18
        uses: addnab/docker-run-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          image: laoshanxi/appmesh:build_ubuntu18
          options: --rm -v ${{ github.workspace }}:/workspace -w /workspace
          run: |
            mkdir ubuntu18
            cd ubuntu18
            cmake ..
            make -j6
            make pack
            ls
            make test ARGS='-V'

      - name: build with ubuntu20
        uses: addnab/docker-run-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          image: laoshanxi/appmesh:build_ubuntu20
          options: --rm -v ${{ github.workspace }}:/workspace -w /workspace
          run: |
            mkdir ubuntu20
            cd ubuntu20
            cmake ..
            make -j6
            make pack
            ls
            make test ARGS='-V'

      - name: Generate Changelog
        run: |
          echo "1. libcpr replace cpprestsdk" >> CHANGELOG.txt

      # publish Github release
      # https://github.com/softprops/action-gh-release
      - name: Publish Github release
        uses: softprops/action-gh-release@v1
        with:
          body_path: CHANGELOG.txt
          name: "Golang REST agent"
          tag_name: ${{ env.APPMESH_VERSION }}
          fail_on_unmatched_files: true
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          token: ${{ secrets.PUBLISH_RELEASE }}
          files: |
            CHANGELOG.txt
            LICENSE
            ubuntu*/*.deb
            ubuntu*/*.rpm
