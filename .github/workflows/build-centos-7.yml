name: build centos7 image for build appmesh

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/docker_build/build-centos-7.yml"
      - "docker/Dockerfile.build_centos7"
      - "autogen.sh"
      - "go.*"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: laoshanxi/appmesh

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout Github code
        uses: actions/checkout@v3

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # https://github.com/docker/login-action
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image for centos 7
        uses: docker/build-push-action@e27bcee4eb9e7b4bc168418e3364c4482120393a
        with:
          context: .
          file: docker/Dockerfile.build_centos7
          no-cache: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:build_centos7

        #############################################################
        # manually steps
        #############################################################
        #IMAGE_NAME=laoshanxi/appmesh:build_ubuntu20
        #rm -rf app-mesh
        #docker rmi ubuntu:20.04 -f
        #git clone --depth=1 https://github.com/laoshanxi/app-mesh.git
        #cd app-mesh
        #! docker rmi -f ${IMAGE_NAME}
        #! docker rmi ubuntu:20.04
        #docker build --no-cache -f docker/Dockerfile.build.ubuntu20 -t ${IMAGE_NAME} .
        #docker push ${IMAGE_NAME}
