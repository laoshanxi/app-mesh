import os
import sys
from shutil import copyfile
from recommonmark.parser import CommonMarkParser
current_dir = os.path.dirname(os.path.realpath(__file__))
sys.path.insert(0, os.path.abspath(os.path.join(current_dir, "../../src/sdk/python")))

# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
# sys.path.insert(0, os.path.abspath("."))


# -- Project information -----------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
needs_sphinx = "3.0"
project = "AppMesh"
copyright = "2022, laoshanxi"
author = "laoshanxi"

# The full version, including alpha/beta/rc tags
release = "2.1.1"


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named "sphinx.ext.*") or your custom
# ones.
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.intersphinx",
    "sphinx.ext.napoleon",
    "sphinx.ext.extlinks",
    "sphinx.ext.viewcode",
    "sphinxcontrib.apidoc",
    "sphinx_markdown_tables",
    "recommonmark",
]

# apidoc
apidoc_module_dir = os.path.abspath(os.path.join(current_dir, "../../src/sdk/python"))
apidoc_output_dir = "api"
apidoc_excluded_paths = ["test"]
apidoc_separate_modules = False
apidoc_toc_file = False

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = "C++"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]


source_parsers = {".md": CommonMarkParser}
source_suffix = [".rst", ".md"]

copyfile(os.path.abspath(os.path.join(current_dir, "../../README.md")), os.path.abspath(os.path.join(current_dir, "README.md")))
exclude_py_file = os.path.abspath(os.path.join(current_dir, "../../src/sdk/python/py_exec.py"))
if os.path.exists(exclude_py_file):
   os.remove(exclude_py_file)
